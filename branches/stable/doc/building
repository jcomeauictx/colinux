Building Cooperative Linux
=================================================================

Building Cooperative Linux comes in two parts.

1. Cooperative Linux kernel, i.e, the vmlinux file
2. Host Operating system support code, i.e, the daemon, console, 
   and kernel driver.


1. Compiling the Cooperative Linux kernel
-----------------------------------------

Unpack the source tarball of coLinux and the Linux kernel tarball 
(version 2.4.24, can be obtained from www.kernel.org) in the same 
directory. Make sure that the directory of the Linux kernel is 
named 'linux'. 

Apply the patch found in the ./patch directory of the Cooperative 
Linux tarball, to the Linux kernel. If conflicts arrise, then it is
possible that there is a mismatch between the version of the kernel 
a the version that patch if designed to apply to.

For example: 
    ~/colinux-0.5.3/linux# patch -p1 < ../colinux/patch/linux

The coLinux package is supplied with a premaid Linux kernel 
configuration file. Copy it to your Linux tree:

    ~/colinux-0.5.3/linux# cp ../colinux/conf/linux-config .config

And then, to build vmlinux:
    ~/colinux-0.5.3/linux# make oldconfig
    ~/colinux-0.5.3/linux# make dep
    ~/colinux-0.5.3/linux# make vmlinux


2. Compiling the OS support code 
--------------------------------

Compiling the operating system dependent support code is a little more
complex. The current build system assumes a cross compiler toolchain is 
installed for that purpose. 

Please read the cygwin-cross-build for 
instructions concerning the creation of such toolchain.

2.1. Build Dependencies

The coLinux daemon depends on:
  * mxml

The coLinux console depends on:
  * FLTK (major version 1)

2.2. For Microsoft Windows

Currently, we use the cygwin toolchain for building. Please read the 
cygwin-cross-build for instructions concerning the creation of this 
toolchain. The i686-pc-cygwin- prefix is assumed for gcc, ld, etc. 
To build, run 'make colinux' in the ./src directory.
