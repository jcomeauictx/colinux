Index: linux-2.6.25-source/drivers/scsi/Kconfig
===================================================================
--- linux-2.6.25-source.orig/drivers/scsi/Kconfig
+++ linux-2.6.25-source/drivers/scsi/Kconfig
@@ -327,6 +327,12 @@
 
 if SCSI_LOWLEVEL && SCSI
 
+config SCSI_COOPERATIVE
+	bool "Cooperative Linux support"
+	depends on COOPERATIVE
+	help
+	  SCSI Driver for Cooperative Linux
+
 config ISCSI_TCP
 	tristate "iSCSI Initiator over TCP/IP"
 	depends on SCSI && INET
Index: linux-2.6.25-source/drivers/scsi/Makefile
===================================================================
--- linux-2.6.25-source.orig/drivers/scsi/Makefile
+++ linux-2.6.25-source/drivers/scsi/Makefile
@@ -52,6 +52,7 @@
 obj-$(CONFIG_SCSI_SIM710)	+= 53c700.o	sim710.o
 obj-$(CONFIG_SCSI_ADVANSYS)	+= advansys.o
 obj-$(CONFIG_SCSI_BUSLOGIC)	+= BusLogic.o
+obj-$(CONFIG_SCSI_COOPERATIVE)	+= coscsi.o
 obj-$(CONFIG_SCSI_DPT_I2O)	+= dpt_i2o.o
 obj-$(CONFIG_SCSI_U14_34F)	+= u14-34f.o
 obj-$(CONFIG_SCSI_ARCMSR)	+= arcmsr/
Index: linux-2.6.25-source/include/linux/blkdev.h
===================================================================
--- linux-2.6.25-source.orig/include/linux/blkdev.h
+++ linux-2.6.25-source/include/linux/blkdev.h
@@ -756,7 +756,11 @@
 
 extern int blkdev_issue_flush(struct block_device *, sector_t *);
 
+#ifdef CONFIG_COOPERATIVE
+#define MAX_PHYS_SEGMENTS 256
+#else
 #define MAX_PHYS_SEGMENTS 128
+#endif
 #define MAX_HW_SEGMENTS 128
 #define SAFE_MAX_SECTORS 255
 #define BLK_DEF_MAX_SECTORS 1024
Index: linux-2.6.25-source/drivers/scsi/coscsi.c
===================================================================
--- linux-2.6.25-source.orig/drivers/scsi/coscsi.c
+++ linux-2.6.25-source/drivers/scsi/coscsi.c
@@ -151,7 +151,7 @@
 		info = (co_scsi_intr_t *) &message->data;
 		scp = info->ctx;
 		scp->result = info->result;
-		scp->resid = info->delta;
+		scsi_set_resid(scp, info->delta);
 #if COSCSI_DEBUG_ISR
 		printk(KERN_INFO "coscsi_isr: scp: %p result: %d, delta: %d\n", scp, info->result, info->delta);
 #endif
@@ -244,7 +244,7 @@
 
 static int host_rw(coscsi_worker_t *wp, unsigned long long lba, unsigned long num, int write)
 {
-	struct scatterlist *sg = (struct scatterlist *)wp->scp->request_buffer;
+	struct scatterlist *sg = scsi_sglist(wp->scp);
 	struct scsi_cmnd *scp = wp->scp;
 	unsigned long flags;
 	co_scsi_io_t *iop;
@@ -262,7 +262,7 @@
 
 
 	/* XXX needed when clustering is enabled */
-	count = dma_map_sg(&scp->device->host->shost_gendev, sg, scp->use_sg, scp->sc_data_direction);
+	count = dma_map_sg(&scp->device->host->shost_gendev, sg, scsi_sg_count(scp), scp->sc_data_direction);
 
 	/* Get passage page */
 	co_passage_page_assert_valid();
@@ -278,7 +278,7 @@
 	iop->offset = lba * scp->device->sector_size;
 	iop->count = count;
 	iop->write = write;
-	iop->sg = scp->request_buffer;
+	iop->sg = scsi_sglist(scp);
 	iop->reqlen = total = num * scp->device->sector_size;
 
 	/* Do it */
@@ -287,7 +287,7 @@
 	rc = co_passage_page->params[0];
        	co_passage_page_release(flags);
 
-	dma_unmap_sg(&scp->device->host->shost_gendev, sg, scp->use_sg, scp->sc_data_direction);
+	dma_unmap_sg(&scp->device->host->shost_gendev, sg, scsi_sg_count(scp), scp->sc_data_direction);
 
 #if COSCSI_DUMP_STATS
 	if (rc == GOOD) {
@@ -384,23 +384,23 @@
 	}
 
 	/* Scatter/Gather */
-	if (scp->use_sg) {
+	if (scsi_sg_count(scp)) {
 		struct scatterlist *sg;
 
 		/* Should never be more than 1 for non r/w transfers */
-		if (scp->use_sg > 1) panic("COSCSI: host_pass: use_sg (%d) > 1!\n", scp->use_sg);
+		if (scsi_sg_count(scp) > 1) panic("COSCSI: host_pass: use_sg (%d) > 1!\n", scsi_sg_count(scp));
 
-		sg = (struct scatterlist *)scp->request_buffer;
+		sg = scsi_sglist(scp);
 #if COSCSI_DEBUG_HOST
 		if (dp->debug) printk(KERN_INFO "host_pass: sg: page: %p, offset: %d, length: %d\n",
-			sg->page, sg->offset, sg->length);
+			sg_page(sg), sg->offset, sg->length);
 #endif
-		buffer = page_address(sg->page) + sg->offset;
+		buffer = sg_virt(sg);
 		buflen = sg->length;
 	/* Direct */
 	} else {
-		buffer = scp->request_buffer;
-		buflen = scp->request_bufflen;
+		buffer = scsi_sglist(scp);
+		buflen = scsi_bufflen(scp);
 	}
 
 	co_passage_page_assert_valid();
@@ -455,20 +455,19 @@
 	int act_len;
 
 	/* Scatter/Gather */
-	if (scp->use_sg) {
+	if (scsi_sg_count(scp)) {
 		struct scatterlist *sg;
 		int i;
 
-		/* Should never be more than 1 for non r/w transfers */
-		if (scp->use_sg > COSCSI_SGSIZE) panic("COSCSI: response: use_sg (%d) > %d!\n", scp->use_sg, COSCSI_SGSIZE);
+		/* scatter-gather list too long? */
+		BUG_ON(scsi_sg_count(scp) > COSCSI_SGSIZE);
 
-		sg = (struct scatterlist *)scp->request_buffer;
-		for (i = scp->use_sg; i; i--, sg++) {
+		scsi_for_each_sg(scp, sg, scsi_sg_count(scp), i) {
 #if COSCSI_DEBUG
 			if (wp->dp->debug) printk(KERN_INFO "response: sg: page: %p, offset: %d, length: %d\n",
-				sg->page, sg->offset, sg->length);
+				sg_page(sg), sg->offset, sg->length);
 #endif
-			buffer = page_address(sg->page) + sg->offset;
+			buffer = sg_virt(sg);
 			buflen = sg->length;
 			act_len = min(buflen, len);
 #if COSCSI_DEBUG_COMM
@@ -480,8 +479,8 @@
 		}
 	/* Direct */
         } else {
-		buffer = scp->request_buffer;
-		buflen = scp->request_bufflen;
+		buffer = scsi_sglist(scp);
+		buflen = scsi_bufflen(scp);
 		if (!buflen) return GOOD;
 		act_len = min(buflen, len);
 #if COSCSI_DEBUG_COMM
@@ -518,7 +517,7 @@
 
 	alloc_len = (wp->scp->cmnd[3] << 8) + wp->scp->cmnd[4];
 #if COSCSI_DEBUG_INQ
-	if (wp->dp->debug) printk(KERN_INFO "scsi_inq: alloc_len: %d, buflen: %d\n", alloc_len, wp->scp->request_bufflen);
+	if (wp->dp->debug) printk(KERN_INFO "scsi_inq: alloc_len: %d, buflen: %d\n", alloc_len, scsi_bufflen(wp->scp));
 #endif
 
 	/* EVPD? */
@@ -1105,8 +1104,8 @@
 static struct pci_driver coscsi_pci_driver = {
 	.name		= "coscsi",
 	.id_table	= coscsi_pci_ids,
-	.probe		= coscsi_pci_probe,
-	.remove		= __devexit_p(coscsi_pci_remove),
+	.probe		= coscsi_pci_probe,			/* FIXME: Use bus_type methods */
+	.remove		= __devexit_p(coscsi_pci_remove),	/* FIXME: Use bus_type methods */
 };
 
 extern int coio_test(void);
