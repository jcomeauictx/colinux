 * Kernel:
   * Merge coLinux kernel patch with official kernels paravirt_ops.
     "lguest" in kernel code is a good start point.
   * SSE/MMX support is disabled by bits X86_FEATURE_XMM/MMX in cpu caps.
     Problem is, that inside usage of sse/mmx registers we can not allow
     an OS switch, example for page allocations. This ends with an endless
     FPU fault, see bug#2524658.

 * COFB:
   * Merge with covideo.
   * Implement mouse handling X module, ref. vbmouse in vbox.
   * Make screen scroll working.
   * Test linux host cofb.
   * Copy from X window then paste to host.
   * Seamless window ref. vbox addon
 
 * Consoles:
   * Make the consoles scrollable/resizable.
   * Add select, copy and paste to and from console and to and from
     host-environment (not so much mouse but using keys). Is now
     overcome by using SSH + putty, but that makes the console less
     usefull.
   * Paste clipboard feature is superfluous, as it is already provided in
     the nt console by the OS.
   * Focus change handling.
     If a key is pressed and only released after changing window focus, it
     will stay pressed forever until it is pressed/released again.
     This can be solved by handling FOCUS_EVENT in the input loop (just
     release all pressed keys, like in the FLTK code).
   * Some more accurate console shortcuts handling.
     I'm not exactly sure of what needs to be done here, but I think we can
     solve it by using the modifier flags in the key input record.
   * Fix: The cursor disapears sometimes (fltk console). 
   * Either support multiple consoles or stop the second from attaching
     (probably the latter first). Any console can attach now, broking the
     first one (and all others, off course).
   * Implement backlog in consoles (shift+PgUp). I think it can be easy to
     do in the NT console, as the OS already gives us a screen buffer.
   * Implement setfont in the FLTK console (use the kernel fonts). Needs
     refactoring and maybe some hard work.
   * Implement mouse copy/paste (we don't need gpm to do that). For full
     mouse support we need to implement the kernel driver.

 * Installer:
   * Instruct the user to install Python for Windows, wxPython, and Python 
     Win32 extensions (or use py2exe).
   * The installer should add have an option to launch the configurator 
     when the installation finishes. 

 * Configurator:
   * Finish implementation of editing configuration files.
   * On the place block devices are configured, add the ability to 
     download the images from sourceforge.
   * On the place where network devices are configured, the configurator
     will enumerate either currently installed network adapter and TAP
     devices. More user friendliness could be added there to support the
     installation of one or more TAP devices.
   * Add nice wizards for the newbies.

 * Miscellaneous enhancements and fixes:
   * Lack of entropy - empty /dev/random
   * Make coLinux work on Windows NT 4 SP*.
   * Address all reported SMP issues.
   * The first search path for files specified in the XML, such as in 
     <image path="vmlinux" /> or block devices, should be in the directory 
     that contains the XML file.
   * Revise the argument parsing of the executables other than daemon, i.e,
     use the framework that the daemon uses.
   * Support to shutdown/suspend/resume (just!) coLinux so it becomes
     transportable between hosts.
   * Import features from UML

 * conet: 
   * To fix: If the host connection is lost and returned, colinux-daemon will not 
     automatically return conet.
   * Possibly WinPCAP related, but a fix for support of wireless networks
     would be great.
   * Possibly WinPCAP related, compatibility with IPv6: IPv6 can be
     obtained but setting the IPv6 host address based on routeradvertisements
     is not working fine (I can see IPv6 traffic though in coLinux).
   * Tune performance (i.e reduce round trip time and increase bandwidth).

 * Root file system images: 
   * Fix and improve the Debian image.
     * Add ssh to it. the fact that we will end with the same sshd private keys
       all around the world is not a big issue :)
     * Fix the minor bits of editing needed as described on the Wiki.
     * Edit /etc/fstab to use extfs3
     * Etc-update and etc-upgrade up to today (a few packages but several Mo)
     * Remove some orphan package, like lilo? 
     * Add some 'obvious' packages that seems to be missing like ftp, strace. 
       the kind of software that we might need BEFORE being able to use apt-get.
     * And call it with a n+1 release name.
   * Post more images on SourceForge. Send me URLs of ready images. I will
     not accept images that are tied to specific coLinux releases.

 * Odd things to investigate:
   * Some iptables functionality not working? (see ML)
   * Spurious 'Floating Point Exception' with an athlon optimised vmlinux.

 * Cleanups:
   * Merge console into console-base.
   * Clear out some function naming brain damage and make more use
     of the 'static' keyword :).
   * The usual tidbits: comments, refactoring, etc.

