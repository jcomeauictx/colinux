The Cooperative Linux Daemon hosts the Linux virtual machine as one process 
under the host operating system.

The daemon spits out the kernel's printk() messages along with its own prints. It
also optionally launches the virtual VGA console, that can be used to interface
with the virtual machine.

Its command line syntax is as follows:

  colinux-daemon [-h] [-d] [k] [-t name] [configuration and boot parameter] [@params.txt]

    -h             Show this help text
    -d             Don't launch and attach a coLinux console on startup
    -k             Suppress kernel messages
    -t name        When spawning a console, this is the type of 
                   console (e.g, nt, fltk, etc...)
    -v level       Verbose messages, level 1 prints booting details, 2 or
                   more checks configs, 3 prints errors, default is 0 (off)
    @params.txt    Take more command line params from the given text file (can be multi-line)

The following options are specific to Windows NT/XP/2000:

      --install-service [name]     Install colinux-daemon.exe as an NT service
                                   (default service name: Cooperative Linux)
      --remove-service [name]      Remove colinux service
                                   (default service name: Cooperative Linux)
      --install-driver             Install the colinux-driver (linux.sys)
      --remove-driver              Uninstall (remove) the colinux-driver (linux.sys)
      --status-driver              Show status about the installed/running driver

  Configuration and boot parameter:

    Refer the file README.TXT in coLinux installation for the full list of
    device parameters.

    For example, a simple network-less setup:

       colinux-daemon kernel=vmlinux cobd0=root_fs root=/dev/cobd0 hda1=:cobd0

    Use of new aliases automatically allocates cobd(s), for example:

       colinux-daemon mem=32 kernel=vmlinux hda1=root_fs root=/dev/hda1

    Unhandled paramters are forwarded to the kernel's boot parameters string.

The kernel= option enables this mode. Order of parameters is not
important when options don't depend on each other.              

 Typical examples:

     colinux-daemon kernel=vmlinux

   Boots a kernel without any block devices.


     colinux-daemon kernel=vmlinux mem=32

   Boots the kernel with 32 MB of RAM.


     colinux-daemon -d kernel=vmlinux mem=32

   The '-d' option still works.


     colinux-daemon kernel=vmlinux cobd0=c:\coLinux\root_fs

   It automatically adds \DosDevices\ where needed. Make sure
   you use double-slashes in the situations where shell escaping
   forces you to.


     colinux-daemon kernel=vmlinux cobd0=c:\coLinux\root_fs root=/dev/cobd0 ro

   Of course we need to pass root= to the kernel. Note that every
   parameter in that command line that is not handled by coLinux's
   code is passed along as a kernel boot parameters.


     colinux-daemon kernel=vmlinux cobd0=root_fs root=/dev/cobd0

   ... and resolve relative pathnames.


     colinux-daemon kernel=vmlinux cobd0=root_fs hda2=:cobd0 root=/dev/cobd0

   Device node aliasing. The ':' tells the daemon that cobd0 is not a 
   pathname - read the next example for understanding more.


     colinux-daemon kernel=vmlinux hda1=root_fs root=/dev/hda1

   This makes life a lot easier. If you map an device node
   directly - it would automatically allocate a cobd and
   make an alias for it!

   This syntax reminds a bit of QEMU's syntax (it also has
   hda=).

     colinux-daemon kernel=vmlinux hda1=root_fs root=/dev/hda1 initrd=initrd.gz

   Upgrade your kernel modules for this snapshot.


 Options for networking:

     eth0=tuntap

   Use the first TAP device.


     eth0=tuntap,"Local Area Network"

   You name it.


     eth0=tuntap,"Local Area Network",11:22:33:44:55:66

   Set a MAC address.


     eth0=pcap-bridge,"Local Area Network"

   Uses PCAP bridging.


     eth0=pcap-bridge,"Local Area Network",11:22:33:44:55:66,nopromisc

   Uses PCAP bridging, defined  MAC address and disabled the Promiscuous mode.


     eth0=slirp

   Slirp, the simplest way to internet.  Inside coLinux can use a DHCP-Client.


     eth0=slirp,"",tcp:22:22

   Uses SLiRP networking, forwards the port 22 from host to linux (SSH)


     eth0=slirp,"",tcp:2222:22

   Uses SLiRP networking, with port 2222 on host being redirected (or port
   forwarded) to coLinux guest 22.


     eth0=slirp,"",tcp:2222:22/tcp:4000:80:3

   Uses SLiRP networking, and forwards counts of ports
	Host (windows)  --> guest (coLinux)
	2222            --> 22
	4000		--> 80
	4001		--> 81
	4002		--> 82


 Options for serial device:

     ttys0=COM1

   Connect the serial device /dev/ttyS0 from linux to host system COM1.
   Please set the line paremters for serial port on hostsystem, before
   colinux starts, or use the follow optional parameters.

     ttys0=COM1,"BAUD=115200 PARITY=n DATA=8 STOP=1 dtr=on rts=on"

   Sets many more default parameters for the serial port.  Please refer you
   manual or help system of host system for optional parameters ("MODE /?").


 Options for console device:

   FLTK console is configurable via environment settings.


     set COLINUX_CONSOLE_FONT=Lucida Console:12

   Sets fontname and size.  Allows only fixed width fonts.


     set COLINUX_CONSOLE_FONT=Lucida Console

   Sets fontname.


     set COLINUX_CONSOLE_FONT=:12

   Sets only size. Default font "Terminal" is active.


     set COLINUX_CONSOLE_EXIT_ON_DETACH=1

   Enable automatic close console after detach from colinux.
   This is good option for closing console after linux shutting down.


 Options for executable programs:

     exec0=C:\Programs\Xming\Xming.exe,":0 -clipboard -multiwindow -ac"

   Program Xming.exe runs at start of colnux and terminate it, if colinux
   is shutting down.
