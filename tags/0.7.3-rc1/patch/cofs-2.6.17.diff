Implements host filesystem support


Index: linux-2.6.17-source/fs/Kconfig
===================================================================
--- linux-2.6.17-source.orig/fs/Kconfig
+++ linux-2.6.17-source/fs/Kconfig
@@ -1006,6 +1006,19 @@
 	  containing the directory /) cannot be compiled as a module.
 
 
+config COFUSE_FS
+	tristate "Cooperative Host file system support (COFUSE)"
+	depends on COOPERATIVE
+	default y
+	help
+	  In Cooperative mode, this file system allows you to mount an host
+	  directory structure to a local mountpoint.
+	  COFUSE (Cooperative FUSE) is based on the original FUSE
+	  (File System in User Space).
+
+	  To compile the cofuse support as a module, choose M here: the
+	  module will be called cofusefs.
+
 
 config EFS_FS
 	tristate "EFS file system support (read only) (EXPERIMENTAL)"
Index: linux-2.6.17-source/fs/Makefile
===================================================================
--- linux-2.6.17-source.orig/fs/Makefile
+++ linux-2.6.17-source/fs/Makefile
@@ -91,6 +91,7 @@
 obj-$(CONFIG_AUTOFS4_FS)	+= autofs4/
 obj-$(CONFIG_ADFS_FS)		+= adfs/
 obj-$(CONFIG_FUSE_FS)		+= fuse/
+obj-$(CONFIG_COFUSE_FS)		+= cofusefs/
 obj-$(CONFIG_UDF_FS)		+= udf/
 obj-$(CONFIG_SUN_OPENPROMFS)	+= openpromfs/
 obj-$(CONFIG_JFS_FS)		+= jfs/
Index: linux-2.6.17-source/fs/cofusefs/Makefile
===================================================================
--- /dev/null
+++ linux-2.6.17-source/fs/cofusefs/Makefile
@@ -0,0 +1,8 @@
+#
+# Makefile for the Linux cofuse filesystem routines.
+#
+
+obj-$(CONFIG_COFUSE_FS) += cofusefs.o
+
+cofusefs-objs := inode.o dir.o file.o util.o dev.o
+
Index: linux-2.6.17-source/fs/cofusefs/file.c
===================================================================
--- linux-2.6.17-source.orig/fs/cofusefs/file.c
+++ linux-2.6.17-source/fs/cofusefs/file.c
@@ -244,9 +244,9 @@
 
 	if(fc->flags & FUSE_LARGE_READ) {
 		/* Don't allow this to get mixed up with writes */
-		down(&inode->i_sem);
+		mutex_lock(&inode->i_mutex);
 		fuse_file_bigread(mapping, inode, *ppos, count);
-		up(&inode->i_sem);
+		mutex_unlock(&inode->i_mutex);
 	}
 
 	return generic_file_read(filp, buf, count, ppos);
