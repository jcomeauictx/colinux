--- img/linuxrc	2004-08-19 16:33:14.250000000 -0500
+++ img-work/linuxrc	2004-08-19 16:36:31.250000000 -0500
@@ -2,46 +2,95 @@
 
 PATH=/sbin:/bin:/usr/bin:/usr/sbin
 
+LOG=/linuxrc.log
+
 KERNEL_VERSION=$(uname -r)
 
+# find string within a string
+stringinstring() {
+   case " $2 " in *\ $1\ *) return 0;; esac
+   return 1
+}
+
 # Mount filesystems in /etc/fstab.
+echo  "Mount proc: " >> $LOG
 if [ -x /bin/mount ]; then
-/bin/mount -t proc /proc /proc
+	/bin/mount -t proc /proc /proc 2>&1 >> $LOG
 fi
 
+# Read boot command line (use cat, shell read function may fail)
+CMDLINE="$(cat /proc/cmdline)"
+
+# Check boot comandline for specified option
+checkbootparam() {
+	stringinstring "$1" "$CMDLINE"
+	return "$?"
+}
+
+DEBUGGING=$(checkbootparam debug)
+
+# Shell out to command prompt if something fails
+checkdebugging() {
+	if [ $? -ne 0 && $DEBUGGING ]; then
+		/bin/sh
+   	fi
+}
+ 
 # Set screen blank time to 60 minutes.
 echo -e "\033[9;60]"
 
-sleep 2
+sleep 1
 
 # Display /etc/issue file.
+echo  "Displaying /etc/issue file:" >> $LOG
 if [ -s /etc/issue ]; then
-cat /etc/issue
+	cat /etc/issue 2>&1 | tee -a $LOG
+	checkdebugging
 fi
 
-echo -n "Mounting /"
-/bin/mount /dev/cobd0 /mnt/linux > /dev/null
+echo -n "Determining /" 2>&1 | tee -a $LOG
+#echo >> $LOG
+for i in "$(echo $CMDLINE | cut -d' ' -f1)"; do
+	echo "Parsing for root, found: $i" >> $LOG
+	 NAME="$(echo $i | cut -d= -f1)"
+	 VALUE="$(echo $i | cut -d= -f2)"
+	 case "$NAME" in root) ROOT_DEVICE=$VALUE; ;; esac
+done
+
+checkdebugging
+
+echo "$ROOT_DEVICE" >> $LOG && echo ", Done"
+
+echo -n "Mounting /" 2>&1 | tee -a $LOG
+/bin/mount $ROOT_DEVICE /mnt/linux >> $LOG
+checkdebugging
 
-echo -n "Installing modules for coLinux $KERNEL_VERSION" 
+/usr/sbin/chroot /mnt/linux mount -a >> $LOG 2>&1
+checkdebugging
+
+echo -n "Installing modules for coLinux $KERNEL_VERSION" 2>&1 | tee -a $LOG
 if [ -d "/mnt/linux/lib/modules/$KERNEL_VERSION" ]; then
-	echo ", Skipping."
+	echo ", Skipping." 2>&1 | tee -a $LOG
 else
 	CURRENT_DIR=$(pwd)
 	cd /mnt/linux
-	tar zxf /lib/modules/vmlinux-modules.tar.gz
+	tar zxf /lib/modules/vmlinux-modules.tar.gz >>$LOG 2>&1
+	checkdebugging
 	cd $CURRENT_DIR
 	echo ", Done."
 fi
 
-echo -n "Closing /"
-/bin/umount /mnt/linux > /dev/null
+echo -n "Closing /" 2&>1 | tee -a $LOG
+/usr/sbin/chroot /mnt/linux umount -a >> $LOG 2>&1
+checkdebugging
+/bin/umount /mnt/linux >> $LOG 2>&1
+checkdebugging
 echo ", Done."
 
-# Change to real root device.
-#echo 0x100 > /proc/sys/kernel/real-root-dev
-
 # Freeing proc that was auto-mounted earlier
-umount /proc 2>&1 > /dev/null
+umount /proc >> $LOG 2>&1
 
 # Now delete self
-rm -rf /linuxrc 2>&1 > /dev/null
+rm -rf /linuxrc >> $LOG 2>&1
+
+checkdebugging
