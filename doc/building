Building Cooperative Linux
=================================================================

Building the Cooperative Linux comes in to parts.

1. Cooperative Linux kernel, i.e, the vmlinux file
2. Host Operating system support code, i.e, the daemon, console, 
   and kernel driver.


1. Compiling the Cooperative Linux kernel
-----------------------------------------

Unpack the source tarball of coLinux and the Linux kernel tarball 
(version 2.4.24, can be obtained from www.kernel.org) in the same 
directory. Make sure that the directory of the Linux kernel is 
named 'linux'. 

Apply the patch found in the ./patch directory of the Cooperative 
Linux tarball, to the Linux kernel. If conflicts arrise, then it is
possible that there is a mismatch between the version of the kernel 
a the version that patch if designed to apply to.

For example: 

    ~/colinux-0.5.3/linux# patch -p1 < ../colinux/patch/linux

Copy a pre-maid Linux's .config file:
    ~/colinux-0.5.3/linux# cp ../colinux/conf/kernel-config .config
    ~/colinux-0.5.3/linux# make oldconfig

Build vmlinux
    ~/colinux-0.5.3/linux# make vmlinux


2. Compiling the OS support code 
--------------------------------

Compiling the operating system dependant support code is a little more
complex. The current build system assumes a cross compiler is installed
for that purpose. 

2.1. Build Dependencies

The coLinux daemon depends on:
  * MiniXML

The coLinux console depends on:
  * FLTK (major version 1)


2.2. For Microsoft Windows

Currently, we use the cygwin cross build tools for building. 

{{ TODO: add documentation about building the cross build tools }}

The i686-pc-cygwin- prefix is assumed for these tools.

Also, a Windows computer running an accessable ssh shell using cygwin 
along with the NTDDK installed, is also needed for the final linkage
of the linux.sys file. the WINBOX= option to 'make' allows to specify
the hostname of that computer. Please see the 
./src/colinux/os/winnt/build/Makefile Makefile for further details.

Run 'make colinux' in the ./src directory in order to build the 
necessary files using the remote Windows box, and upload these files
to the same box. Specify WINBOX= along with the hostname of the Windows
box. 

You can use 'make upload' in order to upload the built files to the 
Windows box. 
